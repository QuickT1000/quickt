version: '2'

services:
  quickt-client:
    image: ${DOCKER_REPOSITORY}
    container_name: "${APPLICATION_NAME}_client"
    labels:
      traefik.http.routers.quickt-client.rule: "Host(\"${TRAEFIK_HOST}\")"
      traefik.http.routers.quickt-client.middlewares: "redirect-to-https"
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"
      traefik.http.routers.quickt-client.entrypoints: "websecure"
      traefik.http.routers.quickt-client.tls.certresolver: "letsencrypt"
    working_dir: /app/client
    user: node
    environment:
      - HOST=0.0.0.0
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    networks:
      - default
    restart: unless-stopped
    command: sh -c "npm start"

  quickt-server:
    image: ${DOCKER_REPOSITORY}
    container_name: "${APPLICATION_NAME}_server"
    labels:
      traefik.enable: "true"
      traefik.http.routers.quickt-server.rule: "Host(\"${TRAEFIK_HOST}\")"
      traefik.http.routers.quickt-server.entrypoints: "websecure"
      traefik.http.routers.quickt-server.tls.certresolver: "letsencrypt"
    ports:
      - "3080:3000"
    working_dir: /app/server
    user: node
    environment:
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_CONNECTION_TIMEOUT_MS: ${DATABASE_CONNECTION_TIMEOUT_MS}
      DATABASE_QUERY_TIMEOUT_MS: ${DATABASE_QUERY_TIMEOUT_MS}
      DATABASE_IDLE_TIMEOUT_MS: ${DATABASE_IDLE_TIMEOUT_MS}
    networks:
      - default
    restart: unless-stopped
    command: sh -c "npm start"

  quickt-database:
    image: "postgres:11"
    container_name: "${APPLICATION_NAME}_database"
    labels:
      traefik.enable: "false"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
      PGUSER: ${DATABASE_USER}
      PGPORT: 5433
    ports:
      - "${DATABASE_PORT}:5433"
    volumes:
      - /data/postgres-data:/var/lib/postgresql/data/
    networks:
      - default

networks:
  default:
    external:
      name: reverse_proxy
